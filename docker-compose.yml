version: "3"
services:
  nginx:
    image: nginx:latest        
    volumes:
        - ./web/config/nginx.conf:/etc/nginx/nginx.conf
    ports:
        - "5003:80"
    restart: unless-stopped
    depends_on:
        - backend_legal_text_retrieval
        - frontend_legal_text_retrieval
    networks:
      - service_retrieval_net
    
  db:
      image: mongo
      environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGODB_DATABASE}
      ports:
      - 27017:27017
      restart: unless-stopped
      depends_on:
      - backend_legal_text_retrieval
      networks:
      - service_retrieval_net
      volumes:
      - mongodata:/data/db

  backend_legal_text_retrieval:
    build:
      context: .
      dockerfile: ./web/backend/Dockerfile
    ports:
      - "5002:5002"
    networks:
      - service_retrieval_net
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ["0"]
              capabilities: [gpu]
    environment:
      - "MONGODB_USERNAME=${MONGODB_USERNAME}"
      - "MONGODB_PASSWORD=${MONGODB_PASSWORD}"

  frontend_legal_text_retrieval:
    build:
      context: ./web/frontend
      dockerfile: ./Dockerfile
    ports:
      - "5000:5000"
    networks:
      - service_retrieval_net
    restart: unless-stopped
    depends_on:
      - backend_legal_text_retrieval
networks:
  service_retrieval_net:
    external: true
    driver: bridge

volumes:
  mongodata: